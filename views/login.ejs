<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Login ‚Äì WPG Wallet</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .password-toggle {
      position: absolute;
      right: 1rem;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
    }
  </style>
</head>

<body class="bg-light">
  <div class="container d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="w-100" style="max-width: 400px;">
      <div class="card p-4 shadow w-100" id="loginCard">
        <h3 class="mb-4 text-center">Login to WPG Wallet</h3>

        <form id="loginForm">
          <input type="hidden" name="_csrf" id="csrfToken" value="<%= csrfToken %>">

          <div class="mb-3">
            <label>Email address</label>
            <input type="email" id="email" class="form-control" required />
          </div>
          <div class="mb-1 position-relative">
            <label>Password</label>
            <input type="password" id="password" class="form-control" required />
            <span class="password-toggle" onclick="togglePassword('password')">üëÅÔ∏è</span>
          </div>

          <div class="text-end mb-3">
            <a href="/forgot-password" class="small text-decoration-none text-primary">Forgot Password?</a>
          </div>

          <button type="submit" class="btn btn-primary w-100" id="loginBtn">Login</button>
        </form>

        <hr />
        <button class="btn btn-outline-danger w-100" id="googleLogin">
          <img src="https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg" width="20" class="me-2" />
          Sign in with Google
        </button>
        <div class="text-center mt-3">
          Don't have an account? <a href="/signup">Sign up</a>
        </div>
      </div>

      <div id="loginSpinner" class="card p-4 shadow text-center d-none">
        <div class="spinner-border text-primary" role="status">
          <span class="visually-hidden">Logging in...</span>
        </div>
        <p class="mt-3 mb-0">Logging you in...</p>
      </div>
    </div>
  </div>

  <div class="modal fade" id="otpModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content p-4">
        <h5 class="mb-3">üîê Enter OTP</h5>
        <p class="text-muted mb-3">We sent a one-time password to your email.</p>
        <input type="text" id="otpInput" class="form-control mb-3" placeholder="Enter OTP" />
        <button class="btn btn-success w-100" id="verifyOtpBtn">Verify & Continue</button>
      </div>
    </div>
  </div>

  <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1055;">
    <div id="loginToast" class="toast align-items-center text-white bg-danger" role="alert" data-bs-delay="4000">
      <div class="d-flex">
        <div class="toast-body" id="loginToastMsg">Something went wrong</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    </div>
  </div>

  <script>
    function togglePassword(id) {
      const input = document.getElementById(id);
      input.type = input.type === "password" ? "text" : "password";
    }

    function showLoginToast(message) {
      const toastEl = document.getElementById("loginToast");
      const toastMsg = document.getElementById("loginToastMsg");
      toastMsg.textContent = message;
      const toast = new bootstrap.Toast(toastEl);
      toast.show();
    }
  </script>

  <script type="module">
    import { auth, signInWithEmailAndPassword, provider, signInWithPopup } from "/js/firebase-config.js";

    const emailInput = document.getElementById("email");
    const passwordInput = document.getElementById("password");
    const otpModal = new bootstrap.Modal(document.getElementById("otpModal"));
    const otpInput = document.getElementById("otpInput");
    const csrfToken = document.getElementById("csrfToken").value;

    let tempIdToken = null;
    let tempName = null;

    document.getElementById("loginForm").addEventListener("submit", async (e) => {
      e.preventDefault();
      const email = emailInput.value.trim();
      const password = passwordInput.value.trim();

      try {
        const cred = await signInWithEmailAndPassword(auth, email, password);
        tempIdToken = await cred.user.getIdToken();
        tempName = cred.user.displayName;

        const sendOtpRes = await fetch("/send-otp", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "CSRF-Token": csrfToken
          },
          credentials: "include", // ‚úÖ critical for session to validate CSRF
          body: JSON.stringify({ email }),
        });

        const otpData = await sendOtpRes.json();
        if (!otpData.success) return showLoginToast("‚ùå Failed to send OTP. Please try again.");

        otpModal.show();
      } catch (err) {
        showLoginToast("‚ùå Invalid email or password");
      }
    });

    document.getElementById("verifyOtpBtn").addEventListener("click", async () => {
      const otp = otpInput.value.trim();
      if (!otp || !tempIdToken) return showLoginToast("Enter OTP");

      const res = await fetch("/sessionLogin", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "CSRF-Token": csrfToken
        },
        credentials: "include", // ‚úÖ ensure session cookie is sent
        body: JSON.stringify({ idToken: tempIdToken, name: tempName, otp }),
      });

      const result = await res.json();
      if (res.ok) {
        window.location.href = result.redirect || "/dashboard";
      } else {
        showLoginToast(result.error || "Login failed");
      }
    });

    const googleBtn = document.getElementById("googleLogin");
    if (googleBtn) {
      googleBtn.addEventListener("click", async () => {
        try {
          const result = await signInWithPopup(auth, provider);
          const idToken = await result.user.getIdToken();
          const name = result.user.displayName || "Google User";

          const res = await fetch("/sessionLogin", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "CSRF-Token": csrfToken
            },
            credentials: "include",
            body: JSON.stringify({ idToken, name })
          });

          const data = await res.json();
          if (res.ok) {
            window.location.href = data.redirect || "/dashboard";
          } else {
            showLoginToast(data.error || "Google login failed. Try again.");
          }
        } catch (err) {
          console.error("Google Sign-In Error:", err.message);
          showLoginToast("Google Sign-In failed. Try again.");
        }
      });
    }
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>